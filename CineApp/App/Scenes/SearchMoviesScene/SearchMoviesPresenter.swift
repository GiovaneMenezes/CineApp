//
//  SearchMoviesPresenter.swift
//  CineApp
//
//  Created by Giovane Silva de Menezes Cavalcante on 08/01/19.
//  Copyright (c) 2019 GSMenezes. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

protocol SearchMoviesPresenterInput {
    func presentSearchMovieResult(response: SearchMoviesScene.SearchMovies.Response)
    func presentSelectedMovie(response: SearchMoviesScene.SelectMovie.Response)
}

protocol SearchMoviesPresenterOutput: class {
    func displaySearchMovieResult(viewModel: SearchMoviesScene.SearchMovies.ViewModel)
    func showSelectedMovie(viewModel: SearchMoviesScene.SelectMovie.ViewModel)
}

class SearchMoviesPresenter: SearchMoviesPresenterInput {
    
    weak var output: SearchMoviesPresenterOutput?
    
    // MARK: Presentation logic
    
    func presentSearchMovieResult(response: SearchMoviesScene.SearchMovies.Response) {
        let viewModel: SearchMoviesScene.SearchMovies.ViewModel!
        switch response.state {
        case .success(let movies):
            let cellModels = movies.map {
                return SearchMoviesScene.SearchMovies.ViewModel.CellModel(title: $0.title ?? "", posterPath: $0.posterPath ?? "")
            }
            viewModel = SearchMoviesScene.SearchMovies.ViewModel(state: .success(upcomingMovies: cellModels))
            
        case .failure(let errorMessage):
            viewModel = SearchMoviesScene.SearchMovies.ViewModel(state: .failure(errorMessage: errorMessage))
        }
        output?.displaySearchMovieResult(viewModel: viewModel)
    }
    
    func presentSelectedMovie(response: SearchMoviesScene.SelectMovie.Response) {
        let viewModel = SearchMoviesScene.SelectMovie.ViewModel()
        output?.showSelectedMovie(viewModel: viewModel)
    }
}
