//
//  UpcomingMoviesPresenter.swift
//  CineApp
//
//  Created by Giovane Silva de Menezes Cavalcante on 05/01/19.
//  Copyright (c) 2019 GSMenezes. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

protocol UpcomingMoviesPresenterInput {
    func presentMovies(response: UpcomingMoviesScene.FetchMovies.Response)
    func presentSelectedMovie(response: UpcomingMoviesScene.SelectMovie.Response)
}

protocol UpcomingMoviesPresenterOutput: class {
    func showFetchedMovies(viewModel: UpcomingMoviesScene.FetchMovies.ViewModel)
    func showSelectedMovie(viewModel: UpcomingMoviesScene.SelectMovie.ViewModel)
}

class UpcomingMoviesPresenter: UpcomingMoviesPresenterInput {
    
    weak var output: UpcomingMoviesPresenterOutput?
    
    // MARK: Presentation logic
    
    func presentMovies(response: UpcomingMoviesScene.FetchMovies.Response) {
        let viewModel: UpcomingMoviesScene.FetchMovies.ViewModel!
        switch response.state {
        case .success(let movies):
            let cellModels = movies.map {
                return UpcomingMoviesScene.FetchMovies.ViewModel.CellModel(title: $0.title ?? "", releaseDate: $0.releaseDate ?? "", backdropPath: $0.backdropPath ?? "", genre: GenreTranslateService.shared.formattedTranslate(to: $0.genreIDS ?? []))
            }
            viewModel = UpcomingMoviesScene.FetchMovies.ViewModel(state: .success(upcomingMovies: cellModels))
            
        case .failure(let errorMessage):
            viewModel = UpcomingMoviesScene.FetchMovies.ViewModel(state: .failure(errorMessage: errorMessage))
        }
        output?.showFetchedMovies(viewModel: viewModel)
    }
    
    func presentSelectedMovie(response: UpcomingMoviesScene.SelectMovie.Response) {
        let viewModel = UpcomingMoviesScene.SelectMovie.ViewModel()
        output?.showSelectedMovie(viewModel: viewModel)
    }
}
