//
//  UpcomingMoviesRouter.swift
//  CineApp
//
//  Created by Giovane Silva de Menezes Cavalcante on 05/01/19.
//  Copyright (c) 2019 GSMenezes. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit

protocol UpcomingMoviesRouterInput { }

protocol UpcomingMoviesRouterDataSource: class {
    var selectedMovie: MovieResult? { get }
}

protocol UpcomingMoviesRouterDataDestination: class {
    
}

class UpcomingMoviesRouter: UpcomingMoviesRouterInput {
    
    weak var viewController: UpcomingMoviesViewController!
    weak private var dataSource: UpcomingMoviesRouterDataSource!
    weak var dataDestination: UpcomingMoviesRouterDataDestination!
    
    enum SegueIdentifier: String {
        case movieDetail = "MovieDetail"
        case searchMovies = "SearchMovies"
    }
    
    init(viewController: UpcomingMoviesViewController, dataSource: UpcomingMoviesRouterDataSource, dataDestination: UpcomingMoviesRouterDataDestination) {
        self.viewController = viewController
        self.dataSource = dataSource
        self.dataDestination = dataDestination
    }
    
    // MARK: Navigation
    
    func navigateToMovieDetailViewController() {
        viewController.performSegue(withIdentifier: SegueIdentifier.movieDetail.rawValue, sender: self)
    }
    
    func navigateToSearchButtonViewController() {
        viewController.performSegue(withIdentifier: SegueIdentifier.searchMovies.rawValue, sender: self)
    }
    
    // MARK: Communication
    
    func passDataToNextScene(for segue: UIStoryboardSegue) {
        // NOTE: Teach the router which scenes it can communicate with
        switch segue.identifier {
        case SegueIdentifier.movieDetail.rawValue:
            passDataToMoviewDetail(segue)
        default:
            return
        }
    }
    
    func passDataToMoviewDetail(_ segue: UIStoryboardSegue) {
        guard let vc = segue.destination as? MovieDetailViewController, let model = dataSource.selectedMovie else { return }
        vc.model = model
    }
}
